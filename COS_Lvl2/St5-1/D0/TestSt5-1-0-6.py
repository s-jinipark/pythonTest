from collections import deque

graph = [
    [],     # 0
    [2, 3], # 1  # 노드 1에 연결된 노드들
    [4, 5], # 2
    [6],    # 3
    [2, 5], # 4
    [2, 4], # 5
    [3, 7], # 6
    [6]     # 7
]
# 그림 '(0-5)그래프_샘플' 참조

# 방문 정보를 기록하기 위한 리스트
visited = [False] * 8

def bfs(v):
    # 큐 생성 및 큐에 시작 노드 삽입
    q = deque()
    q.append(v)
    # 아직 방문해야 하는 노드가 있다면
    while q:
        # 큐에서 노드를 꺼내서 x에 저장
        x = q.popleft()
        print(x, end=' ')
        # 그래프를 탐색하다가 방문하지 않은 노드가 있다면
        for i in graph[x]:
            if not visited[i]:
                # 큐에 방문하라고 삽입하고 방문 처리
                q.append(i)
                visited[i] = True

bfs(1)

'''
BFS
BFS 너비 우선 탐색이라는 이름에 걸맞게 그래프의 너비부터 탐색한다. DFS가 세로로 탐색하는 반면, BFS는 그래프를 가로로 탐색한다. 
DFS는 인접 노드의 인접 노드를 계속해서 탐색해 가지만, 
BFS는 인접 노드를 계속 큐에 넣어가며 큐에 들어온 순서대로 탐색을 시작하기에 
시작 노드에서부터 가까운 노드들부터 탐색한다는 의미이다.


여기 참조
https://veggie-garden.tistory.com/42

[정리]
DFS	                    BFS
-------------------- --------------------
스택 또는 재귀 함수	    큐
최적 해라는 보장 없음  	항상 최적 해임을 보장
그래프 규모가 클 때	    그래프 규모가 작을 때
특정 목표 노드를 찾을 때	최단 경로를 찾을 때

'''